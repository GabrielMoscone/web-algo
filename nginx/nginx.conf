events {}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  sendfile on;

  # Detecta sessão pelo cookie "sessionid"
  map $http_cookie $has_session {
    default 0;
    "~*sessionid=" 1;
  }

  upstream backend_cluster {
    server middleware:8080;
    keepalive 32;
  }

  server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index login.html index.html;

    # Raiz: se tem sessão vai pro index; senão, vai para login
    location = / {
      if ($has_session) { return 302 /index.html; }
      return 302 /login.html;
    }

    # Protege SOMENTE o index.html, exigindo seção
    location = /index.html {
      if ($has_session = 0) { return 302 /login.html; }
      add_header Cache-Control "no-store";
      try_files $uri =404;
    }

    # Arquivos públicos (login, cadastro, recuperar-senha, assets, etc.)
    location / {
      add_header Cache-Control "no-store";
      try_files $uri $uri/ =404;
    }

    # Proxy para API
    location /api/ {
      proxy_pass http://backend_cluster;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
