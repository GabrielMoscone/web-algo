services:
  # ===== APLICACAO =====
  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - middleware1
      - middleware2
    ports: ["8088:80"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web-algo/index.html:/usr/share/nginx/html/index.html:ro
      - ./web-algo/login.html:/usr/share/nginx/html/login.html:ro
      - ./web-algo/cadastro.html:/usr/share/nginx/html/cadastro.html:ro
      - ./web-algo/recuperar-senha.html:/usr/share/nginx/html/recuperar-senha.html:ro
      - ./web-algo/includes:/usr/share/nginx/html/includes:ro
      - ./web-algo/media:/usr/share/nginx/html/media:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    networks:
      - default

  middleware1:
    build:
      context: ./middleware
      dockerfile: Dockerfile
    container_name: middleware1
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: "-Xms512m -Xmx1536m -XX:+UseG1GC"
      WEB_ALGO_URL: ${WEB_ALGO_URL}
    expose:
      - "8080"
      - "8081"
    restart: unless-stopped
    networks:
      - default

  middleware2:
    build:
      context: ./middleware
      dockerfile: Dockerfile
    container_name: middleware2
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: "-Xms512m -Xmx1536m -XX:+UseG1GC"
      WEB_ALGO_URL: ${WEB_ALGO_URL}
    expose:
      - "8080"
      - "8081"
    restart: unless-stopped
    networks:
      - default

  # ===== MONITORAMENTO =====
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=15d"
      - "--enable-feature=remote-write-receiver"
      - "--web.enable-remote-write-receiver"
      - "--enable-feature=native-histograms"
    ports: ["9090:9090"]
    depends_on: [nginx]
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports: ["3000:3000"]
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    depends_on: [prometheus, loki]
    networks:
      - default

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    privileged: true
    ports:
      - "8082:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    command:
      - '--docker_only=true'
      - '--housekeeping_interval=10s'
      - '--max_housekeeping_interval=15s'
      - '--event_storage_event_limit=default=0'
      - '--event_storage_age_limit=default=0'
      - '--store_container_labels=true'
      - '--whitelisted_container_labels=com.docker.compose.project,com.docker.compose.service,com.docker.compose.container-number'
    restart: unless-stopped
    networks:
      - default

  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    ports: ["9115:9115"]
    networks:
      - default

  nginx-exporter:
    image: ghcr.io/nginxinc/nginx-prometheus-exporter:0.11.0
    container_name: nginx-exporter
    command: ["-nginx.scrape-uri=http://nginx/nginx_status"]
    depends_on: [nginx]
    ports: ["9113:9113"]
    networks:
      - default

  # ===== LOGS =====
  loki:
    image: grafana/loki:2.9.6
    command: -config.file=/etc/loki/config/loki-config.yaml
    ports: ["3100:3100"]
    volumes:
      - ./monitoring/loki-config.yaml:/etc/loki/config/loki-config.yaml:ro
      - loki-data:/loki
    networks:
      - default

  promtail:
    image: grafana/promtail:2.9.6
    command: -config.file=/etc/promtail/promtail-config.yml
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/promtail-config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro  # âœ… Adicionar Docker socket
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on: [loki]
    networks:
      - default

  k6:
    image: grafana/k6
    container_name: k6
    volumes:
      - ./k6/testes:/scripts:ro
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
    entrypoint: ["sleep", "infinity"]
    depends_on: [prometheus]
    networks:
      - default

volumes:
  loki-data: {}

networks:
  default:
    driver: bridge
