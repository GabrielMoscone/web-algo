services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on: [middleware]
    ports: ["8088:80"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web-algo/index.html:/usr/share/nginx/html/index.html:ro
      - ./web-algo/login.html:/usr/share/nginx/html/login.html:ro
      - ./web-algo/cadastro.html:/usr/share/nginx/html/cadastro.html:ro
      - ./web-algo/recuperar-senha.html:/usr/share/nginx/html/recuperar-senha.html:ro
      - ./web-algo/includes:/usr/share/nginx/html/includes:ro
      - ./web-algo/media:/usr/share/nginx/html/media:ro
    restart: unless-stopped

  middleware:
    build:
      context: ./middleware
      dockerfile: Dockerfile
    expose:
      - "8080"
    restart: unless-stopped

  # ===== MONITORAMENTO =====
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command: ["--config.file=/etc/prometheus/prometheus.yml", "--storage.tsdb.retention.time=15d"]
    ports: ["9090:9090"]
    depends_on: [nginx]
    networks: [default]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports: ["3000:3000"]
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    depends_on: [prometheus, loki]
    networks: [default]

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports: ["8089:8080"]
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /sys:/sys:ro
    networks: [default]

  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    ports: ["9115:9115"]
    networks: [default]

  nginx-exporter:
    image: ghcr.io/nginxinc/nginx-prometheus-exporter:0.11.0
    container_name: nginx-exporter
    command: ["-nginx.scrape-uri=http://nginx/nginx_status"]
    depends_on: [nginx]
    ports: ["9113:9113"]
    networks: [default]

  # --- LOGS ---
  loki:
    image: grafana/loki:2.9.6
    command: -config.file=/etc/loki/config/loki-config.yaml
    ports: ["3100:3100"]
    volumes:
      - ./monitoring/loki-config.yaml:/etc/loki/config/loki-config.yaml:ro
      - loki-data:/loki

  promtail:
    image: grafana/promtail:2.9.6
    command: -config.file=/etc/promtail/promtail-config.yml
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/promtail-config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
    depends_on: [loki]

volumes:
  loki-data: {}
